TODO
- creare classe Fault e altra classe che "implementa" la coppia per migliorare
  la leggibilita'
    - ok
- cambia firstState in initialState dentro ManagementProtocol
    - ok
- mappa di mappe per rappresentare i binding
    - per ora no, ok
- refactoring degli assert e nomi campi 
    - ok
- definire opportune eccezioni per op fallite o non fattibili
- applicare licenza apache 2.0
- implementare operazioni offerte all'analyzer (op_start, ...)
    - opStart ok
    - opEnd ok (?)
    - faultRule ok (?)
    - il resto da fare
- metodi per il ritorno dei fault
    - ok
- implementare metodo "getPossibleTransition"
    - ok
- sistemare commenti in modo corente
    - ok
- correzione "istance" e "bond" in Instance e Binding
    - ok
- definire funzione "higher order" per la funzione pi e definire una pi di defualt
    - quella di default la facciamo tipo "load balancer"
    > per il momento ho implementato una pi naive che torna la prima NodeInstance capace di
      soddifare il requirement
        - ok


NOTE
1) Binding: id nodo n -> lista dei Binding del tipo <requirement di n, nodo n1 che soddisfa r di n>

2) rappresentare i binding come Map<String, Map<Requirement, String>> secondo 
   me potrebbe peggiorare di molto la leggibilita'. 
   Ad esempio, nel metodo getSatisfiedReq(NodeIstance n) devo tornare la lista
   di requirement di n che sono soddisfatti. 
   In questo modo pero' ho bisogno dei requirement da usare come chiave per 
   la seconda mappa. 
   Quindi dovrei andare a prendermi tutti i requirement necessari in quello stato, e
   per ogni requirement, usare la mappa.
   Il vantaggio presazionale si ha in base a quanti requirement un singolo nodo ha
   (la mia implementazione costa n, c'e' una lista). a questo punto la scelta
   dipende dagli obiettivi della libreria, se vuole essere super generale, in modo
   da venire potenzialmente usata in applicazioni in cui ci sono moltissimi nodi
   (molti dei quali hanno decine di requirement) scrivo la map di map, 
   altrimenti il tradeoff leggibilita'/efficienza potrebbe non convenire (?) 

Da validare
- ho modificato il metodo removeBinding che era errato: rimuoveva completamente l' istanza
  mentre deve solo rimuovere una tripla
- ho modificato il set T in una mappa: stringa -> nodo (prima era una lista di Nodi statici)
- ho modificato il metodo addNewBingings e removeOldBindings
- ho modificato opEnd
- ho modificato il metodo getSatisfiedReq
- ho modificato il metodo defaultPi
- ho spostato getNeededReqs e getOfferedCaps in NodeInstance
- implementato il metodo fault
- implementato il metodo autoreconnect
- implementato il metodo scaeOut1
- come gestire la classe Tmp (non so come chiamarla e come fare refactoring)

